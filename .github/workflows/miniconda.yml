name: cftime test

on:
  pull_request:
  push:
    branches: [master]

jobs:
  run:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        python-version: [ "3.7", "3.8", "3.9", "3.10" ]
        os: [windows-latest, ubuntu-latest, macos-latest]
        platform: [x64, x32]
#  debug on a single os/platform/python version
#       python-version: [ "3.9"]
#       os: [ubuntu-latest]
#       platform: [x64]
        exclude:
          - os: macos-latest  
            platform: x32

    env:
      TRAVIS_BUILD_DIR: ${{ github.workspace }}
      TRAVIS_REPO_SLUG: ${{ github.repository }}

    steps:

    - uses: actions/checkout@v2

    - name: Setup Conda
      uses: s-weigand/setup-conda@v1
      with:
        activate-conda: false
        conda-channels: conda-forge

    - name: Setup Conda Env
      shell: bash -l {0}
      run: |
        conda create --name TEST python=${{ matrix.python-version }} --file requirements.txt --file requirements-dev.txt
        source activate TEST
        # enabling coverage slows down the tests dramaticaly
        #CYTHON_COVERAGE=1 pip install -v -e  . --no-deps --force-reinstall
        pip install -v -e  . --no-deps --force-reinstall
        conda info --all
        conda list

    - name: Run Tests
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash -l {0}
      run: |
        source activate TEST
        pytest -vv test

#   - name: Coveralls
#     env:
#       GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#       COVERALLS_REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#     if: ${{ matrix.os =='ubuntu-latest' && matrix.python-version == '3.9' && matrix.platform == 'x64' }}
#     run: |
#       source activate TEST
#       coveralls --service=github-actions

    - name: Tarball
      if: startsWith(matrix.os,'ubuntu') && matrix.python-version == '3.9'
      shell: bash -l {0}
      run: |
        source activate TEST
        python setup.py --version ; 
        pip wheel . -w dist --no-deps ;
        check-manifest --verbose ;
        twine check dist/* ;
 
    - name: Docs
      if: startsWith(matrix.os,'ubuntu') && matrix.python-version == '3.9'
      shell: bash -l {0}
      run: |
        source activate TEST
        pushd docs && make html linkcheck O=-W && popd;
        #rm -f docs/build/html/_static/jquery-*.js
        #rm -f docs/build/html/_static/underscore-*.js
        #rm -f docs/build/html/.buildinfo
        #sh ./ci/deploy_docs.sh
