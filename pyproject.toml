[project]
name = "cftime"
version = "1.6.5"
description = "Time-handling functionality from netcdf4-python"
readme = "README.md"
authors = [
    { name="Jeff Whitaker", email="whitaker.jeffrey@gmail.com"}
]
license = "MIT"
license-files = ["LICENSE"]
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Operating System :: MacOS :: MacOS X',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX :: Linux',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Programming Language :: Python :: 3.14',
    'Topic :: Scientific/Engineering',
]
dependencies = [
    "numpy>=1.21.2",
]
requires-python = ">=3.10"

[dependency-groups]
dev = [
    "check-manifest",
    "coverage>=7.10.0",
    "coveralls",
    "cython>=0.29.20",
    "pytest",
    "sphinx",
    "twine",
]

[build-system]
requires = [
    "setuptools>=77.0.1",
    "cython>=0.29.20",
    "numpy>=2.0.0,<3",
]
build-backend = "setuptools.build_meta"

[tool.setuptools]
package-dir = {"" = "src"}

[tool.pytest.ini_options]
testpaths = "test"
addopts = [
    "-ra",
    "-v",
    "--doctest-modules",
]
doctest_optionflags = [
    "NORMALIZE_WHITESPACE",
    "ELLIPSIS",
]

[tool.coverage.run]
source = ["src"]
relative_files = true
branch = true
plugins = [
    "Cython.Coverage",
]
include = [
    "src/cftime/*",
]
omit = [
    "setup.py",
    "docs/*",
    "ci/*",
    "test/*",
    ".eggs",
]

[tool.coverage.report]
show_missing = true
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
]

[tool.check-manifest]
ignore = [
    "*.yml",
    ".coveragerc",
    ".gitignore",
    "README.release",
    "ci",
    "ci/*",
    "docs",
    "docs/*",
    "test",
    "test/*",
]

[tool.cibuildwheel]
build-verbosity = 1
skip = [
    "*musllinux_aarch64*",
]

# Emulated testing is slow, so trust that the Python 3.14 test is good enough on aarch64
# (takes about 5 minutes per wheel to build, and 5 minutes to test)
test-skip = [
    "cp3{10,11,12,13}-*_aarch64",
]
test-groups = "dev"
test-command = [
    '''python -c "import cftime; print(f'cftime v{cftime.__version__}')"''',
    "python -m pytest -vv {package}/test"
]
environment = {CFTIME_LIMITED_API="1"}
